AWSTemplateFormatVersion: 2010-09-09

Parameters:
  VpcName:
    Description: "Enter VPC ID"
    Type: String
  KeyPairName:
    Type: String

Resources:

  ApplicationSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic from everywhere
      SecurityGroupIngress:
        IpProtocol: -1
        CidrIp: 0.0.0.0/0

  Blue:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          yum update -y
          amazon-linux-extras install nginx1 -y
          rm /usr/share/nginx/html/index.html

          cat > /usr/share/nginx/html/index.html <<EOF
          <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
          <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
              <head>
                  <title>BLUE</title>
                  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
                  <style type="text/css">
                      /*<![CDATA[*/
                      body {
                          background-color: #3c6eb4;
                          color: #000;
                      }
                      /*]]>*/
                  </style>
              </head>
              <body>
              </body>
          </html>
          EOF

          service nginx start

      ImageId: ami-0ba0ce0c11eb723a1
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !Ref ApplicationSG
      KeyName: !Ref KeyPairName
      Tags:
        - Key: "Name"
          Value: blue

  Red:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          yum update -y
          amazon-linux-extras install nginx1 -y
          rm /usr/share/nginx/html/index.html

          cat > /usr/share/nginx/html/index.html <<EOF
          <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
          <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
              <head>
                  <title>RED</title>
                  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
                  <style type="text/css">
                      /*<![CDATA[*/
                      body {
                          background-color: #eb4034;
                          color: #000;
                      }
                      /*]]>*/
                  </style>
              </head>
              <body>
              </body>
          </html>
          EOF

          service nginx start

      ImageId: ami-0ba0ce0c11eb723a1
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !Ref ApplicationSG
      KeyName: !Ref KeyPairName
      Tags:
        - Key: "Name"
          Value: red

  Temp:
    Type: AWS::EC2::Instance
    DependsOn: 
      - ALB
    Properties:
      UserData:
        Fn::Base64: !Sub 
          - |
            #!/bin/bash -xe

            yum update -y

            echo > /home/ec2-user/data <<EOF
            Internal LB DNS Name: ${InternalLBDNSName}
            Internal LB DNS Name: ${ALB.DNSName}
            EOF

            echo > /home/ec2-user/hello <<EOF
            world
            EOF
          - InternalLBDNSName: !GetAtt ALB.DNSName


      ImageId: ami-0ba0ce0c11eb723a1
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !Ref ApplicationSG
      KeyName: !Ref KeyPairName
      Tags:
        - Key: "Name"
          Value: temp

#Create an Application Load Balancer
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyAppLoadBalancer
      Subnets:
        - subnet-6ccb030a
        - subnet-33679e7b

#Create a Listener on Port 80
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP


#Create a Target Group:
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /index.html
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 5
      HealthCheckTimeoutSeconds: 5
      HealthCheckIntervalSeconds: 10
      Matcher:
        HttpCode: 200
      Name: MyTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcName
      #TargetType: instance
      Targets:
        - Id: !Ref Blue
        - Id: !Ref Red


